version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: product-mgr-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: productmgr
      POSTGRES_PASSWORD: productmgr
      POSTGRES_DB: productmgr
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-logs:/var/log/postgresql
      - ./postgres/init-pgaudit.sql:/docker-entrypoint-initdb.d/10-init-pgaudit.sql
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - product-mgr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U productmgr"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-mgr-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/productmgr
      SPRING_DATASOURCE_USERNAME: productmgr
      SPRING_DATASOURCE_PASSWORD: productmgr
    networks:
      - product-mgr-network

networks:
  product-mgr-network:
    driver: bridge

volumes:
  postgres-data:
  postgres-logs: